user  angie;

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

worker_processes 1;
worker_cpu_affinity 1;
worker_rlimit_nofile 65536;

error_log  /var/log/angie/error.log notice;
pid        /run/angie.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/angie/mime.types;
    default_type  application/octet-stream;

    aio threads;
    output_buffers 4 32k;

#   Switch off Angie version in server response
    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format extended '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" rt="$request_time" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'h="$host" sn="$server_name" ru="$request_uri" u="$uri" '
                        'ucs="$upstream_cache_status" ua="$upstream_addr" us="$upstream_status" '
                        'uct="$upstream_connect_time" urt="$upstream_response_time"';

    access_log  /var/log/angie/access.log  main;

#   Set keepalive timeout
    keepalive_timeout  65;

    proxy_cache_path /var/cache/angie levels=1:2 keys_zone=wordpress_cache:10m inactive=60m use_temp_path=off;

# Upstreams

#   Wordpress
    upstream wordpress_backend {
#       Set server:port, check fails amount, timeout to check upstream server again
        server 127.0.0.1:1443 max_fails=3 fail_timeout=30s;

#       Set timeout for inactive connection
        keepalive_timeout 60s;
#       Set max amount of requests for one connection
        keepalive_requests 1000;
#       Set connection cache for upstream group        
        keepalive 32;
        
    }

    include /etc/angie/http.d/*.conf;
}
