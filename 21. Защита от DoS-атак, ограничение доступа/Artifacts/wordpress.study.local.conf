# User-agent limit map

map $http_user_agent $drop_conn {
    default 0;
    ~*(Mozilla.+\s\(Windows.+\)\sAppleWebKit.+\sChrome.+) 1;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name wordpress.study.local www.wordpress.study.local;
    
    # Redirect all HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# Limit zones

limit_req_zone $binary_remote_addr zone=admin_req:10m rate=1r/s;                               # Request limit
limit_req_zone $binary_remote_addr zone=xmlrpc_req:10m rate=1r/s;                               # Request limit

# HTTPS server
server {
    listen 443 ssl default;
#    http2 on;
    http3 on;
    server_name wordpress.study.local www.wordpress.study.local;

#   Logging

    access_log /var/log/angie/https-access-wordpress.study.local.log main;
    error_log /var/log/angie/https-error-wordpress.study.local.log;
    
# SSL configuration
#   Certificate, key, OCSP responder and resolver
    ssl_certificate /etc/ssl/angie/.ssl/wordpress.study.local/wildcard.study.local.crt;
    ssl_certificate_key /etc/ssl/angie/.ssl/wordpress.study.local/wildcard.study.local.key;
    ssl_trusted_certificate /etc/ssl/ocsp/ca.crt;
    resolver 127.0.0.1 valid=300s;
    resolver_timeout 5s;

#   SSL protocols, ciphers, session parameters, stapling check
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
#   Hide server-side headers
    proxy_hide_header X-Powered-By;
    proxy_hide_header Strict-Transport-Security;
    proxy_hide_header X-Frame-Options;
    proxy_hide_header X-Content-Type-Options;
    proxy_hide_header X-XSS-Protection;
    proxy_hide_header Referrer-Policy;
    proxy_hide_header Content-Security-Policy;

#   Set security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https://wordpress.study.local;
        script-src 'self' 'unsafe-inline' 'unsafe-eval' 'wasm-unsafe-eval' 'inline-speculation-rules' https://wordpress.study.local;
        worker-src 'self' blob: https://wordpress.study.local;
        style-src 'unsafe-inline' https://wordpress.study.local;
        img-src 'unsafe-inline' data: blob: https://wordpress.study.local https://secure.gravatar.com https://ps.w.org;
        font-src 'unsafe-inline' data: https://wordpress.study.local;
        connect-src 'self' *.study.local;
        frame-src 'self' blob:;
        frame-ancestors 'self';
        form-action 'self';";
    
#   Compression

#   Brotli content-encoding
    brotli on;                          # enable Brotli
    brotli_static on;                   # serve pre-compressed files if exist
    brotli_comp_level 4;                # compression level
    brotli_types                        # compression mime types
        text/plain 
        text/css 
        text/javascript 
        application/javascript 
        application/x-javascript 
        application/json 
        application/xml 
        application/xml+rss 
        text/xml 
        image/svg+xml
        font/woff
        font/woff2
        font/ttf
        font/otf
        image/webp
        image/bmp;

#   Gzip content-encoding   
    gzip on;                            # enable gzip
    gzip_static on;                     # serve pre-compressed files if exist
    gzip_vary on;                       # allow Header Vary: Accept-Encoding
    gzip_proxied any;                   # allow all proxied requests to be gzipped
    gzip_comp_level 4;                  # compression level
    gzip_types 
        text/plain
        text/css
        text/javascript
        application/javascript
        application/x-javascript  
        application/json 
        application/xml
        application/xml+rss
        text/xml
        image/svg+xml
        font/woff
        font/woff2
        font/ttf
        font/otf;
    
#   Set proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
#   Buffer optimizations
    proxy_buffer_size 16k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;
    
#   Set timeouts
    proxy_connect_timeout 90;
    proxy_send_timeout 90;
    proxy_read_timeout 90;
    send_timeout 90;
    
#   Cache control
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    
    location / {
        proxy_pass https://wordpress_backend$request_uri;                                      # set proxy_pass to backend upstream for location
        proxy_cache wordpress_cache;                                                           # set cache zone for location
        proxy_cache_bypass $http_cache_control;                                                # set cache bypass for location
        proxy_no_cache $http_cache_control;                                                    # set no cache
        proxy_cache_revalidate on;                                                             # enable cache revalidate
        proxy_cache_lock on;                                                                   # enable cache lock
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;      # set cache stale for 50x error pages
        proxy_cache_background_update on;                                                      # enable cache background upgrade
        proxy_cache_methods GET HEAD;                                                          # set cache for GET and HEAD methods    }
    
#   Static files caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2)$ {
        proxy_pass https://wordpress_backend$request_uri;                                      # set proxy_pass to backend upstream for location
        expires 365d;                                                                          # set cache expiration for static files
        add_header Cache-Control "public, no-transform";                                       # set Cache-Control header
        access_log off;                                                                        # disable access log for static files
        proxy_cache wordpress_cache;                                                           # set cache zone for location
        proxy_cache_valid 200 302 365d;                                                        # set cache valid time for 200 and 302
    }
    
#   Disable logging for favicon and robots.txt
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
    
#   Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

#   DoS protection and limits for /admin

    location = /wp-login.php {

        if ($drop_conn = 0) {
            return 444;
        }

        auth_basic "Authenticate";
        auth_basic_user_file /etc/angie/.auth/htpasswd;

#        if ($request_method = POST) {
#            return 403;
#        }

        limit_req zone=admin_req burst=5 nodelay;                                              # Set request limit 1r/s, burst 5r/s        limit_req_log_level warn;                                                              # Request logging level WARN
        limit_req_status 406;                                                                  # Request limit return HTTP code 406 - Not Acceptable

        proxy_pass https://wordpress_backend$request_uri;                                      # set proxy_pass to backend upstream for location
        proxy_cache wordpress_cache;                                                           # set cache zone for location
        proxy_cache_bypass $http_cache_control;                                                # set cache bypass for location
        proxy_no_cache $http_cache_control;                                                    # set no cache
        proxy_cache_revalidate on;                                                             # enable cache revalidate
        proxy_cache_lock on;                                                                   # enable cache lock
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;      # set cache stale for 50x error pages
        proxy_cache_background_update on;                                                      # enable cache background upgrade
        proxy_cache_methods GET HEAD;                                                          # set cache for GET and HEAD methods        
    }

    location = /xmlrpc.php {

#        if ($request_method = POST) {
#            return 403;
#        }

        limit_req zone=xmlrpc_req burst=10 nodelay;                                            # Set request limit 1r/s, burst 5r/s        limit_req_log_level warn;                                                              # Request logging level WARN
        limit_req_status 406;                                                                  # Request limit return HTTP code 406 - Not Acceptable

        proxy_pass https://wordpress_backend$request_uri;                                      # set proxy_pass to backend upstream for location
        proxy_cache wordpress_cache;                                                           # set cache zone for location
        proxy_cache_bypass $http_cache_control;                                                # set cache bypass for location
        proxy_no_cache $http_cache_control;                                                    # set no cache
        proxy_cache_revalidate on;                                                             # enable cache revalidate
        proxy_cache_lock on;                                                                   # enable cache lock
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;      # set cache stale for 50x error pages
        proxy_cache_background_update on;                                                      # enable cache background upgrade
        proxy_cache_methods GET HEAD;                                                          # set cache for GET and HEAD methods        
    }

}
